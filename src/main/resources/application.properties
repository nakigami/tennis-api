# Server
server.port=8080

# Datasource (PostgreSQL)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/tennisdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:tennis}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:secret}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Kafka
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=tennis-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Swagger / OpenAPI (Springdoc)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Jackson
spring.jackson.serialization.write-dates-as-timestamps=false

# Spring Boot Actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Activer le health-check Kafka dans Actuator
management.health.kafka.enabled=true

# Logging (Optional)
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
